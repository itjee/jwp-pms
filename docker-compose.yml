version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: pms_postgres
    environment:
      POSTGRES_DB: pms_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - pms_network

  redis:
    image: redis:7-alpine
    container_name: pms_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pms_network

  backend:
    build:
      context: ./pms-backend
      dockerfile: Dockerfile
    container_name: pms_backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://pms_admin:PmsAdmin!!@10.10.150.85:6297/pms
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=your-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - REFRESH_TOKEN_EXPIRE_DAYS=7
    ports:
      - "8000:8000"
    volumes:
      - ./pms-backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - pms_network
    restart: unless-stopped

  frontend:
    build:
      context: ./pms-frontend
      dockerfile: Dockerfile
    container_name: pms_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - pms_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  backend_uploads:

networks:
  pms_network:
    driver: bridge